/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.api;

import jaqpot.client.ApiException;
import jaqpot.client.model.BundleData;
import jaqpot.client.model.DatasetData;
import jaqpot.client.model.Task;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;
import java.util.Map;

/**
 * API tests for EnmApi
 */
@Ignore
public class EnmApiTest {

    private final EnmApi api = new EnmApi();

    
    /**
     * Creates Bundle
     *
     * Reads Substances from SubstanceOwner and creates Bundle.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBundleTest() throws ApiException {
        BundleData body = null;
        String subjectid = null;
        String response = api.createBundle(body, subjectid);

        // TODO: test validations
    }
    
    /**
     * Creates Dataset
     *
     * Reads Studies from Bundle&#39;s Substances, creates Dateaset,calculates Descriptors, returns Dataset
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDatasetByStudiesTest() throws ApiException {
        DatasetData data = null;
        String subjectid = null;
        Task response = api.createDatasetByStudies(data, subjectid);

        // TODO: test validations
    }
    
    /**
     * Retrieves descriptor calculation categories
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDescriptorCategoriesTest() throws ApiException {
        List<Object> response = api.getDescriptorCategories();

        // TODO: test validations
    }
    
    /**
     * Retrieves property categories
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPropertyCategoriesTest() throws ApiException {
        Map<String, Object> response = api.getPropertyCategories();

        // TODO: test validations
    }
    
}
