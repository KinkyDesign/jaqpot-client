/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.api;

import jaqpot.client.ApiException;
import java.io.File;
import jaqpot.client.model.Pmml;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for PmmlApi
 */
@Ignore
public class PmmlApiTest {

    private final PmmlApi api = new PmmlApi();

    
    /**
     * Creates a new PMML entry
     *
     * Creates a new PMML entry which is assigned a random unique ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPMMLTest() throws ApiException {
        File pmmlFile = null;
        String subjectid = null;
        String title = null;
        String description = null;
        api.createPMML(pmmlFile, subjectid, title, description);

        // TODO: test validations
    }
    
    /**
     * Creates a new PMML entry
     *
     * Creates a new PMML entry which is assigned a random unique ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPMMLSelectionTest() throws ApiException {
        String subjectid = null;
        String features = null;
        Pmml response = api.createPMMLSelection(subjectid, features);

        // TODO: test validations
    }
    
    /**
     * Returns PMML entry
     *
     * Finds and returns a PMML document by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPmmlTest() throws ApiException {
        String id = null;
        String subjectid = null;
        api.getPmml(id, subjectid);

        // TODO: test validations
    }
    
    /**
     * Finds all PMML entries
     *
     * Finds all PMML entries in the DB of Jaqpot and returns them in a list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPmmlTest() throws ApiException {
        String subjectid = null;
        Integer start = null;
        Integer max = null;
        api.listPmml(subjectid, start, max);

        // TODO: test validations
    }
    
}
