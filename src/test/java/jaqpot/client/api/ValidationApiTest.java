/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.api;

import jaqpot.client.ApiException;
import jaqpot.client.model.Task;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for ValidationApi
 */
@Ignore
public class ValidationApiTest {

    private final ValidationApi api = new ValidationApi();

    
    /**
     * Creates Validation Report
     *
     * Creates Validation Report
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void crossValidateAlgorithmTest() throws ApiException {
        String algorithmUri = null;
        String trainingDatasetUri = null;
        String algorithmParams = null;
        String predictionFeature = null;
        String transformations = null;
        String scaling = null;
        Integer folds = null;
        String stratify = null;
        Integer seed = null;
        String subjectId = null;
        Task response = api.crossValidateAlgorithm(algorithmUri, trainingDatasetUri, algorithmParams, predictionFeature, transformations, scaling, folds, stratify, seed, subjectId);

        // TODO: test validations
    }
    
    /**
     * Creates Validation Report
     *
     * Creates Validation Report
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void externalValidateAlgorithmTest() throws ApiException {
        String modelUri = null;
        String testDatasetUri = null;
        String subjectId = null;
        Task response = api.externalValidateAlgorithm(modelUri, testDatasetUri, subjectId);

        // TODO: test validations
    }
    
    /**
     * Creates Validation Report
     *
     * Creates Validation Report
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void splitValidateAlgorithmTest() throws ApiException {
        Double splitRatio = null;
        String algorithmUri = null;
        String trainingDatasetUri = null;
        String algorithmParams = null;
        String predictionFeature = null;
        String transformations = null;
        String scaling = null;
        String stratify = null;
        Integer seed = null;
        String subjectId = null;
        Task response = api.splitValidateAlgorithm(splitRatio, algorithmUri, trainingDatasetUri, algorithmParams, predictionFeature, transformations, scaling, stratify, seed, subjectId);

        // TODO: test validations
    }
    
}
