/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.api;

import jaqpot.client.ApiException;
import jaqpot.client.model.BibTeX;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for BibtexApi
 */
@Ignore
public class BibtexApiTest {

    private final BibtexApi api = new BibtexApi();

    
    /**
     * Creates a new BibTeX entry
     *
     * Creates a new BibTeX entry which is assigned a random unique ID. Clients are not allowed to specify a custom ID when using this method. Clients should use PUT instead in such a case.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBibTeXTest() throws ApiException {
        BibTeX body = null;
        String subjectid = null;
        api.createBibTeX(body, subjectid);

        // TODO: test validations
    }
    
    /**
     * Places a new BibTeX entry at a particular URI
     *
     * Creates a new BibTeX entry at the specified URI. If a BibTeX already exists at this URI,it will be replaced. If, instead, no BibTeX is stored under the specified URI, a new BibTeX entry will be created. Notice that authentication, authorization and accounting (quota) restrictions may apply.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createBibTeXGivenIDTest() throws ApiException {
        String id = null;
        BibTeX body = null;
        String subjectid = null;
        api.createBibTeXGivenID(id, body, subjectid);

        // TODO: test validations
    }
    
    /**
     * Deletes a particular BibTeX resource
     *
     * Deletes a BibTeX resource of a given ID. The method is idempondent, that is, it can be used more than once without triggering an exception/error. If the BibTeX does not exist, the method will return without errors. Authentication and authorization requirements apply, so clients that are not authenticated with a valid token or do not have sufficient priviledges will not be able to delete a BibTeX using this method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBibTeXTest() throws ApiException {
        String id = null;
        String subjectid = null;
        api.deleteBibTeX(id, subjectid);

        // TODO: test validations
    }
    
    /**
     * Returns BibTeX entry
     *
     * Finds and returns a BibTeX by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBibTeXTest() throws ApiException {
        String id = null;
        api.getBibTeX(id);

        // TODO: test validations
    }
    
    /**
     * Finds all BibTeX entries
     *
     * Finds all BibTeX entries in the DB of Jaqpot and returns them in a list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBibTeXsTest() throws ApiException {
        String bibtype = null;
        String creator = null;
        String query = null;
        Integer start = null;
        Integer max = null;
        api.listBibTeXs(bibtype, creator, query, start, max);

        // TODO: test validations
    }
    
    /**
     * Modifies a particular BibTeX resource
     *
     * Modifies (applies a patch on) a BibTeX resource of a given ID. This implementation of PATCH follows the RFC 6902 proposed standard. See https://tools.ietf.org/rfc/rfc6902.txt for details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifyBibTeXTest() throws ApiException {
        String id = null;
        String body = null;
        String subjectid = null;
        api.modifyBibTeX(id, body, subjectid);

        // TODO: test validations
    }
    
}
