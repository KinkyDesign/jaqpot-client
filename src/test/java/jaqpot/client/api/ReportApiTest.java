/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.api;

import jaqpot.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for ReportApi
 */
@Ignore
public class ReportApiTest {

    private final ReportApi api = new ReportApi();

    
    /**
     * Creates PDF from report
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPDFTest() throws ApiException {
        String id = null;
        String subjectid = null;
        api.createPDF(id, subjectid);

        // TODO: test validations
    }
    
    /**
     * Retrieves Report by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReportTest() throws ApiException {
        String id = null;
        String subjectid = null;
        api.getReport(id, subjectid);

        // TODO: test validations
    }
    
    /**
     * Retrieves Reports of User
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReportsTest() throws ApiException {
        String subjectid = null;
        Integer start = null;
        Integer max = null;
        api.getReports(subjectid, start, max);

        // TODO: test validations
    }
    
    /**
     * Modifies a particular Report resource
     *
     * Modifies (applies a patch on) a Report resource of a given ID. This implementation of PATCH follows the RFC 6902 proposed standard. See https://tools.ietf.org/rfc/rfc6902.txt for details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifyReportTest() throws ApiException {
        String id = null;
        String body = null;
        String subjectid = null;
        api.modifyReport(id, body, subjectid);

        // TODO: test validations
    }
    
    /**
     * Removes Report by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeReportTest() throws ApiException {
        String id = null;
        String subjectid = null;
        api.removeReport(id, subjectid);

        // TODO: test validations
    }
    
}
