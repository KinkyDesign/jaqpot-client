/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * BibTeX
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-09T12:17:06.729Z")
public class BibTeX {
  @SerializedName("meta")
  private MetaInfo meta = null;

  @SerializedName("ontologicalClasses")
  private List<String> ontologicalClasses = new ArrayList<String>();

  @SerializedName("visible")
  private Boolean visible = false;

  @SerializedName("temporary")
  private Boolean temporary = false;

  @SerializedName("featured")
  private Boolean featured = false;

  @SerializedName("author")
  private String author = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("bookTitle")
  private String bookTitle = null;

  @SerializedName("school")
  private String school = null;

  @SerializedName("chapter")
  private String chapter = null;

  @SerializedName("copyright")
  private String copyright = null;

  @SerializedName("edition")
  private String edition = null;

  @SerializedName("editor")
  private String editor = null;

  @SerializedName("crossref")
  private String crossref = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("year")
  private String year = null;

  @SerializedName("pages")
  private String pages = null;

  @SerializedName("volume")
  private String volume = null;

  @SerializedName("number")
  private String number = null;

  @SerializedName("journal")
  private String journal = null;

  @SerializedName("isbn")
  private String isbn = null;

  @SerializedName("issn")
  private String issn = null;

  @SerializedName("keywords")
  private String keywords = null;

  @SerializedName("key")
  private String key = null;

  @SerializedName("annotation")
  private String annotation = null;

  @SerializedName("series")
  private String series = null;

  @SerializedName("url")
  private String url = null;

  /**
   * Gets or Sets bibType
   */
  public enum BibTypeEnum {
    @SerializedName("Article")
    ARTICLE("Article"),
    
    @SerializedName("Book")
    BOOK("Book"),
    
    @SerializedName("Conference")
    CONFERENCE("Conference"),
    
    @SerializedName("Phdthesis")
    PHDTHESIS("Phdthesis"),
    
    @SerializedName("Booklet")
    BOOKLET("Booklet"),
    
    @SerializedName("Inbook")
    INBOOK("Inbook"),
    
    @SerializedName("Incollection")
    INCOLLECTION("Incollection"),
    
    @SerializedName("Inproceedings")
    INPROCEEDINGS("Inproceedings"),
    
    @SerializedName("Manual")
    MANUAL("Manual"),
    
    @SerializedName("Mastersthesis")
    MASTERSTHESIS("Mastersthesis"),
    
    @SerializedName("Misc")
    MISC("Misc"),
    
    @SerializedName("Proceedings")
    PROCEEDINGS("Proceedings"),
    
    @SerializedName("TechReport")
    TECHREPORT("TechReport"),
    
    @SerializedName("Unpublished")
    UNPUBLISHED("Unpublished"),
    
    @SerializedName("Entry")
    ENTRY("Entry");

    private String value;

    BibTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("bibType")
  private BibTypeEnum bibType = null;

  @SerializedName("publisher")
  private String publisher = null;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("abstract")
  private String _abstract = null;

  public BibTeX meta(MetaInfo meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @ApiModelProperty(example = "null", value = "")
  public MetaInfo getMeta() {
    return meta;
  }

  public void setMeta(MetaInfo meta) {
    this.meta = meta;
  }

  public BibTeX ontologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
    return this;
  }

  public BibTeX addOntologicalClassesItem(String ontologicalClassesItem) {
    this.ontologicalClasses.add(ontologicalClassesItem);
    return this;
  }

   /**
   * Get ontologicalClasses
   * @return ontologicalClasses
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getOntologicalClasses() {
    return ontologicalClasses;
  }

  public void setOntologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
  }

  public BibTeX visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public BibTeX temporary(Boolean temporary) {
    this.temporary = temporary;
    return this;
  }

   /**
   * Get temporary
   * @return temporary
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getTemporary() {
    return temporary;
  }

  public void setTemporary(Boolean temporary) {
    this.temporary = temporary;
  }

  public BibTeX featured(Boolean featured) {
    this.featured = featured;
    return this;
  }

   /**
   * Get featured
   * @return featured
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }

  public BibTeX author(String author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public BibTeX title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public BibTeX bookTitle(String bookTitle) {
    this.bookTitle = bookTitle;
    return this;
  }

   /**
   * Get bookTitle
   * @return bookTitle
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBookTitle() {
    return bookTitle;
  }

  public void setBookTitle(String bookTitle) {
    this.bookTitle = bookTitle;
  }

  public BibTeX school(String school) {
    this.school = school;
    return this;
  }

   /**
   * Get school
   * @return school
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSchool() {
    return school;
  }

  public void setSchool(String school) {
    this.school = school;
  }

  public BibTeX chapter(String chapter) {
    this.chapter = chapter;
    return this;
  }

   /**
   * Get chapter
   * @return chapter
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getChapter() {
    return chapter;
  }

  public void setChapter(String chapter) {
    this.chapter = chapter;
  }

  public BibTeX copyright(String copyright) {
    this.copyright = copyright;
    return this;
  }

   /**
   * Get copyright
   * @return copyright
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCopyright() {
    return copyright;
  }

  public void setCopyright(String copyright) {
    this.copyright = copyright;
  }

  public BibTeX edition(String edition) {
    this.edition = edition;
    return this;
  }

   /**
   * Get edition
   * @return edition
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getEdition() {
    return edition;
  }

  public void setEdition(String edition) {
    this.edition = edition;
  }

  public BibTeX editor(String editor) {
    this.editor = editor;
    return this;
  }

   /**
   * Get editor
   * @return editor
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getEditor() {
    return editor;
  }

  public void setEditor(String editor) {
    this.editor = editor;
  }

  public BibTeX crossref(String crossref) {
    this.crossref = crossref;
    return this;
  }

   /**
   * Get crossref
   * @return crossref
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCrossref() {
    return crossref;
  }

  public void setCrossref(String crossref) {
    this.crossref = crossref;
  }

  public BibTeX address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public BibTeX year(String year) {
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = year;
  }

  public BibTeX pages(String pages) {
    this.pages = pages;
    return this;
  }

   /**
   * Get pages
   * @return pages
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPages() {
    return pages;
  }

  public void setPages(String pages) {
    this.pages = pages;
  }

  public BibTeX volume(String volume) {
    this.volume = volume;
    return this;
  }

   /**
   * Get volume
   * @return volume
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getVolume() {
    return volume;
  }

  public void setVolume(String volume) {
    this.volume = volume;
  }

  public BibTeX number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public BibTeX journal(String journal) {
    this.journal = journal;
    return this;
  }

   /**
   * Get journal
   * @return journal
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getJournal() {
    return journal;
  }

  public void setJournal(String journal) {
    this.journal = journal;
  }

  public BibTeX isbn(String isbn) {
    this.isbn = isbn;
    return this;
  }

   /**
   * Get isbn
   * @return isbn
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getIsbn() {
    return isbn;
  }

  public void setIsbn(String isbn) {
    this.isbn = isbn;
  }

  public BibTeX issn(String issn) {
    this.issn = issn;
    return this;
  }

   /**
   * Get issn
   * @return issn
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getIssn() {
    return issn;
  }

  public void setIssn(String issn) {
    this.issn = issn;
  }

  public BibTeX keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

   /**
   * Get keywords
   * @return keywords
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getKeywords() {
    return keywords;
  }

  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }

  public BibTeX key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public BibTeX annotation(String annotation) {
    this.annotation = annotation;
    return this;
  }

   /**
   * Get annotation
   * @return annotation
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAnnotation() {
    return annotation;
  }

  public void setAnnotation(String annotation) {
    this.annotation = annotation;
  }

  public BibTeX series(String series) {
    this.series = series;
    return this;
  }

   /**
   * Get series
   * @return series
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSeries() {
    return series;
  }

  public void setSeries(String series) {
    this.series = series;
  }

  public BibTeX url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public BibTeX bibType(BibTypeEnum bibType) {
    this.bibType = bibType;
    return this;
  }

   /**
   * Get bibType
   * @return bibType
  **/
  @ApiModelProperty(example = "null", value = "")
  public BibTypeEnum getBibType() {
    return bibType;
  }

  public void setBibType(BibTypeEnum bibType) {
    this.bibType = bibType;
  }

  public BibTeX publisher(String publisher) {
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPublisher() {
    return publisher;
  }

  public void setPublisher(String publisher) {
    this.publisher = publisher;
  }

  public BibTeX id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BibTeX _abstract(String _abstract) {
    this._abstract = _abstract;
    return this;
  }

   /**
   * Get _abstract
   * @return _abstract
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAbstract() {
    return _abstract;
  }

  public void setAbstract(String _abstract) {
    this._abstract = _abstract;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BibTeX bibTeX = (BibTeX) o;
    return Objects.equals(this.meta, bibTeX.meta) &&
        Objects.equals(this.ontologicalClasses, bibTeX.ontologicalClasses) &&
        Objects.equals(this.visible, bibTeX.visible) &&
        Objects.equals(this.temporary, bibTeX.temporary) &&
        Objects.equals(this.featured, bibTeX.featured) &&
        Objects.equals(this.author, bibTeX.author) &&
        Objects.equals(this.title, bibTeX.title) &&
        Objects.equals(this.bookTitle, bibTeX.bookTitle) &&
        Objects.equals(this.school, bibTeX.school) &&
        Objects.equals(this.chapter, bibTeX.chapter) &&
        Objects.equals(this.copyright, bibTeX.copyright) &&
        Objects.equals(this.edition, bibTeX.edition) &&
        Objects.equals(this.editor, bibTeX.editor) &&
        Objects.equals(this.crossref, bibTeX.crossref) &&
        Objects.equals(this.address, bibTeX.address) &&
        Objects.equals(this.year, bibTeX.year) &&
        Objects.equals(this.pages, bibTeX.pages) &&
        Objects.equals(this.volume, bibTeX.volume) &&
        Objects.equals(this.number, bibTeX.number) &&
        Objects.equals(this.journal, bibTeX.journal) &&
        Objects.equals(this.isbn, bibTeX.isbn) &&
        Objects.equals(this.issn, bibTeX.issn) &&
        Objects.equals(this.keywords, bibTeX.keywords) &&
        Objects.equals(this.key, bibTeX.key) &&
        Objects.equals(this.annotation, bibTeX.annotation) &&
        Objects.equals(this.series, bibTeX.series) &&
        Objects.equals(this.url, bibTeX.url) &&
        Objects.equals(this.bibType, bibTeX.bibType) &&
        Objects.equals(this.publisher, bibTeX.publisher) &&
        Objects.equals(this.id, bibTeX.id) &&
        Objects.equals(this._abstract, bibTeX._abstract);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, ontologicalClasses, visible, temporary, featured, author, title, bookTitle, school, chapter, copyright, edition, editor, crossref, address, year, pages, volume, number, journal, isbn, issn, keywords, key, annotation, series, url, bibType, publisher, id, _abstract);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BibTeX {\n");
    
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    ontologicalClasses: ").append(toIndentedString(ontologicalClasses)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    temporary: ").append(toIndentedString(temporary)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    bookTitle: ").append(toIndentedString(bookTitle)).append("\n");
    sb.append("    school: ").append(toIndentedString(school)).append("\n");
    sb.append("    chapter: ").append(toIndentedString(chapter)).append("\n");
    sb.append("    copyright: ").append(toIndentedString(copyright)).append("\n");
    sb.append("    edition: ").append(toIndentedString(edition)).append("\n");
    sb.append("    editor: ").append(toIndentedString(editor)).append("\n");
    sb.append("    crossref: ").append(toIndentedString(crossref)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    journal: ").append(toIndentedString(journal)).append("\n");
    sb.append("    isbn: ").append(toIndentedString(isbn)).append("\n");
    sb.append("    issn: ").append(toIndentedString(issn)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    annotation: ").append(toIndentedString(annotation)).append("\n");
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    bibType: ").append(toIndentedString(bibType)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    _abstract: ").append(toIndentedString(_abstract)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

