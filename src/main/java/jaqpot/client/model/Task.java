/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Task
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-09T12:17:06.729Z")
public class Task {
  @SerializedName("meta")
  private MetaInfo meta = null;

  @SerializedName("ontologicalClasses")
  private List<String> ontologicalClasses = new ArrayList<String>();

  @SerializedName("visible")
  private Boolean visible = false;

  @SerializedName("temporary")
  private Boolean temporary = false;

  @SerializedName("featured")
  private Boolean featured = false;

  @SerializedName("resultUri")
  private String resultUri = null;

  @SerializedName("result")
  private String result = null;

  @SerializedName("percentageCompleted")
  private Float percentageCompleted = null;

  @SerializedName("errorReport")
  private ErrorReport errorReport = null;

  @SerializedName("httpStatus")
  private Integer httpStatus = null;

  @SerializedName("duration")
  private Long duration = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("TRAINING")
    TRAINING("TRAINING"),
    
    @SerializedName("PREDICTION")
    PREDICTION("PREDICTION"),
    
    @SerializedName("PREPARATION")
    PREPARATION("PREPARATION"),
    
    @SerializedName("VALIDATION")
    VALIDATION("VALIDATION");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("_id")
  private String id = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    @SerializedName("RUNNING")
    RUNNING("RUNNING"),
    
    @SerializedName("COMPLETED")
    COMPLETED("COMPLETED"),
    
    @SerializedName("CANCELLED")
    CANCELLED("CANCELLED"),
    
    @SerializedName("ERROR")
    ERROR("ERROR"),
    
    @SerializedName("REJECTED")
    REJECTED("REJECTED"),
    
    @SerializedName("QUEUED")
    QUEUED("QUEUED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public Task meta(MetaInfo meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @ApiModelProperty(example = "null", value = "")
  public MetaInfo getMeta() {
    return meta;
  }

  public void setMeta(MetaInfo meta) {
    this.meta = meta;
  }

  public Task ontologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
    return this;
  }

  public Task addOntologicalClassesItem(String ontologicalClassesItem) {
    this.ontologicalClasses.add(ontologicalClassesItem);
    return this;
  }

   /**
   * Get ontologicalClasses
   * @return ontologicalClasses
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getOntologicalClasses() {
    return ontologicalClasses;
  }

  public void setOntologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
  }

  public Task visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public Task temporary(Boolean temporary) {
    this.temporary = temporary;
    return this;
  }

   /**
   * Get temporary
   * @return temporary
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getTemporary() {
    return temporary;
  }

  public void setTemporary(Boolean temporary) {
    this.temporary = temporary;
  }

  public Task featured(Boolean featured) {
    this.featured = featured;
    return this;
  }

   /**
   * Get featured
   * @return featured
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }

  public Task resultUri(String resultUri) {
    this.resultUri = resultUri;
    return this;
  }

   /**
   * Get resultUri
   * @return resultUri
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getResultUri() {
    return resultUri;
  }

  public void setResultUri(String resultUri) {
    this.resultUri = resultUri;
  }

  public Task result(String result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getResult() {
    return result;
  }

  public void setResult(String result) {
    this.result = result;
  }

  public Task percentageCompleted(Float percentageCompleted) {
    this.percentageCompleted = percentageCompleted;
    return this;
  }

   /**
   * Get percentageCompleted
   * @return percentageCompleted
  **/
  @ApiModelProperty(example = "null", value = "")
  public Float getPercentageCompleted() {
    return percentageCompleted;
  }

  public void setPercentageCompleted(Float percentageCompleted) {
    this.percentageCompleted = percentageCompleted;
  }

  public Task errorReport(ErrorReport errorReport) {
    this.errorReport = errorReport;
    return this;
  }

   /**
   * Get errorReport
   * @return errorReport
  **/
  @ApiModelProperty(example = "null", value = "")
  public ErrorReport getErrorReport() {
    return errorReport;
  }

  public void setErrorReport(ErrorReport errorReport) {
    this.errorReport = errorReport;
  }

  public Task httpStatus(Integer httpStatus) {
    this.httpStatus = httpStatus;
    return this;
  }

   /**
   * Get httpStatus
   * @return httpStatus
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getHttpStatus() {
    return httpStatus;
  }

  public void setHttpStatus(Integer httpStatus) {
    this.httpStatus = httpStatus;
  }

  public Task duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public Task type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Task id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Task status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Task task = (Task) o;
    return Objects.equals(this.meta, task.meta) &&
        Objects.equals(this.ontologicalClasses, task.ontologicalClasses) &&
        Objects.equals(this.visible, task.visible) &&
        Objects.equals(this.temporary, task.temporary) &&
        Objects.equals(this.featured, task.featured) &&
        Objects.equals(this.resultUri, task.resultUri) &&
        Objects.equals(this.result, task.result) &&
        Objects.equals(this.percentageCompleted, task.percentageCompleted) &&
        Objects.equals(this.errorReport, task.errorReport) &&
        Objects.equals(this.httpStatus, task.httpStatus) &&
        Objects.equals(this.duration, task.duration) &&
        Objects.equals(this.type, task.type) &&
        Objects.equals(this.id, task.id) &&
        Objects.equals(this.status, task.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, ontologicalClasses, visible, temporary, featured, resultUri, result, percentageCompleted, errorReport, httpStatus, duration, type, id, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Task {\n");
    
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    ontologicalClasses: ").append(toIndentedString(ontologicalClasses)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    temporary: ").append(toIndentedString(temporary)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    resultUri: ").append(toIndentedString(resultUri)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    percentageCompleted: ").append(toIndentedString(percentageCompleted)).append("\n");
    sb.append("    errorReport: ").append(toIndentedString(errorReport)).append("\n");
    sb.append("    httpStatus: ").append(toIndentedString(httpStatus)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

