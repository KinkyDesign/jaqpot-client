/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Parameter
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-09T12:17:06.729Z")
public class Parameter {
  @SerializedName("meta")
  private MetaInfo meta = null;

  @SerializedName("ontologicalClasses")
  private List<String> ontologicalClasses = new ArrayList<String>();

  @SerializedName("visible")
  private Boolean visible = false;

  @SerializedName("temporary")
  private Boolean temporary = false;

  @SerializedName("featured")
  private Boolean featured = false;

  @SerializedName("name")
  private String name = null;

  @SerializedName("value")
  private Object value = null;

  /**
   * Gets or Sets scope
   */
  public enum ScopeEnum {
    @SerializedName("OPTIONAL")
    OPTIONAL("OPTIONAL"),
    
    @SerializedName("MANDATORY")
    MANDATORY("MANDATORY");

    private String value;

    ScopeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("scope")
  private ScopeEnum scope = null;

  @SerializedName("allowedValues")
  private List<Object> allowedValues = new ArrayList<Object>();

  @SerializedName("minValue")
  private Object minValue = null;

  @SerializedName("maxValue")
  private Object maxValue = null;

  @SerializedName("minArraySize")
  private Integer minArraySize = null;

  @SerializedName("maxArraySize")
  private Integer maxArraySize = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("_id")
  private String id = null;

  public Parameter meta(MetaInfo meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @ApiModelProperty(example = "null", value = "")
  public MetaInfo getMeta() {
    return meta;
  }

  public void setMeta(MetaInfo meta) {
    this.meta = meta;
  }

  public Parameter ontologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
    return this;
  }

  public Parameter addOntologicalClassesItem(String ontologicalClassesItem) {
    this.ontologicalClasses.add(ontologicalClassesItem);
    return this;
  }

   /**
   * Get ontologicalClasses
   * @return ontologicalClasses
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getOntologicalClasses() {
    return ontologicalClasses;
  }

  public void setOntologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
  }

  public Parameter visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public Parameter temporary(Boolean temporary) {
    this.temporary = temporary;
    return this;
  }

   /**
   * Get temporary
   * @return temporary
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getTemporary() {
    return temporary;
  }

  public void setTemporary(Boolean temporary) {
    this.temporary = temporary;
  }

  public Parameter featured(Boolean featured) {
    this.featured = featured;
    return this;
  }

   /**
   * Get featured
   * @return featured
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }

  public Parameter name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Parameter value(Object value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getValue() {
    return value;
  }

  public void setValue(Object value) {
    this.value = value;
  }

  public Parameter scope(ScopeEnum scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(example = "null", value = "")
  public ScopeEnum getScope() {
    return scope;
  }

  public void setScope(ScopeEnum scope) {
    this.scope = scope;
  }

  public Parameter allowedValues(List<Object> allowedValues) {
    this.allowedValues = allowedValues;
    return this;
  }

  public Parameter addAllowedValuesItem(Object allowedValuesItem) {
    this.allowedValues.add(allowedValuesItem);
    return this;
  }

   /**
   * Get allowedValues
   * @return allowedValues
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Object> getAllowedValues() {
    return allowedValues;
  }

  public void setAllowedValues(List<Object> allowedValues) {
    this.allowedValues = allowedValues;
  }

  public Parameter minValue(Object minValue) {
    this.minValue = minValue;
    return this;
  }

   /**
   * Get minValue
   * @return minValue
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getMinValue() {
    return minValue;
  }

  public void setMinValue(Object minValue) {
    this.minValue = minValue;
  }

  public Parameter maxValue(Object maxValue) {
    this.maxValue = maxValue;
    return this;
  }

   /**
   * Get maxValue
   * @return maxValue
  **/
  @ApiModelProperty(example = "null", value = "")
  public Object getMaxValue() {
    return maxValue;
  }

  public void setMaxValue(Object maxValue) {
    this.maxValue = maxValue;
  }

  public Parameter minArraySize(Integer minArraySize) {
    this.minArraySize = minArraySize;
    return this;
  }

   /**
   * Get minArraySize
   * @return minArraySize
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMinArraySize() {
    return minArraySize;
  }

  public void setMinArraySize(Integer minArraySize) {
    this.minArraySize = minArraySize;
  }

  public Parameter maxArraySize(Integer maxArraySize) {
    this.maxArraySize = maxArraySize;
    return this;
  }

   /**
   * Get maxArraySize
   * @return maxArraySize
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMaxArraySize() {
    return maxArraySize;
  }

  public void setMaxArraySize(Integer maxArraySize) {
    this.maxArraySize = maxArraySize;
  }

  public Parameter description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Parameter id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Parameter parameter = (Parameter) o;
    return Objects.equals(this.meta, parameter.meta) &&
        Objects.equals(this.ontologicalClasses, parameter.ontologicalClasses) &&
        Objects.equals(this.visible, parameter.visible) &&
        Objects.equals(this.temporary, parameter.temporary) &&
        Objects.equals(this.featured, parameter.featured) &&
        Objects.equals(this.name, parameter.name) &&
        Objects.equals(this.value, parameter.value) &&
        Objects.equals(this.scope, parameter.scope) &&
        Objects.equals(this.allowedValues, parameter.allowedValues) &&
        Objects.equals(this.minValue, parameter.minValue) &&
        Objects.equals(this.maxValue, parameter.maxValue) &&
        Objects.equals(this.minArraySize, parameter.minArraySize) &&
        Objects.equals(this.maxArraySize, parameter.maxArraySize) &&
        Objects.equals(this.description, parameter.description) &&
        Objects.equals(this.id, parameter.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, ontologicalClasses, visible, temporary, featured, name, value, scope, allowedValues, minValue, maxValue, minArraySize, maxArraySize, description, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Parameter {\n");
    
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    ontologicalClasses: ").append(toIndentedString(ontologicalClasses)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    temporary: ").append(toIndentedString(temporary)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    allowedValues: ").append(toIndentedString(allowedValues)).append("\n");
    sb.append("    minValue: ").append(toIndentedString(minValue)).append("\n");
    sb.append("    maxValue: ").append(toIndentedString(maxValue)).append("\n");
    sb.append("    minArraySize: ").append(toIndentedString(minArraySize)).append("\n");
    sb.append("    maxArraySize: ").append(toIndentedString(maxArraySize)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

