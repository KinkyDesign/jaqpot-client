/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * Dataset
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-09T12:17:06.729Z")
public class Dataset {
  @SerializedName("meta")
  private MetaInfo meta = null;

  @SerializedName("ontologicalClasses")
  private List<String> ontologicalClasses = new ArrayList<String>();

  @SerializedName("visible")
  private Boolean visible = false;

  @SerializedName("temporary")
  private Boolean temporary = false;

  @SerializedName("featured")
  private Boolean featured = false;

  @SerializedName("datasetURI")
  private String datasetURI = null;

  @SerializedName("byModel")
  private String byModel = null;

  @SerializedName("dataEntry")
  private List<DataEntry> dataEntry = new ArrayList<DataEntry>();

  @SerializedName("features")
  private List<FeatureInfo> features = new ArrayList<FeatureInfo>();

  @SerializedName("totalRows")
  private Integer totalRows = null;

  @SerializedName("totalColumns")
  private Integer totalColumns = null;

  /**
   * Gets or Sets descriptors
   */
  public enum DescriptorsEnum {
    @SerializedName("EXPERIMENTAL")
    EXPERIMENTAL("EXPERIMENTAL"),
    
    @SerializedName("IMAGE")
    IMAGE("IMAGE"),
    
    @SerializedName("GO")
    GO("GO"),
    
    @SerializedName("MOPAC")
    MOPAC("MOPAC"),
    
    @SerializedName("CDK")
    CDK("CDK"),
    
    @SerializedName("PREDICTED")
    PREDICTED("PREDICTED");

    private String value;

    DescriptorsEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("descriptors")
  private List<DescriptorsEnum> descriptors = new ArrayList<DescriptorsEnum>();

  @SerializedName("_id")
  private String id = null;

  public Dataset meta(MetaInfo meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @ApiModelProperty(example = "null", value = "")
  public MetaInfo getMeta() {
    return meta;
  }

  public void setMeta(MetaInfo meta) {
    this.meta = meta;
  }

  public Dataset ontologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
    return this;
  }

  public Dataset addOntologicalClassesItem(String ontologicalClassesItem) {
    this.ontologicalClasses.add(ontologicalClassesItem);
    return this;
  }

   /**
   * Get ontologicalClasses
   * @return ontologicalClasses
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getOntologicalClasses() {
    return ontologicalClasses;
  }

  public void setOntologicalClasses(List<String> ontologicalClasses) {
    this.ontologicalClasses = ontologicalClasses;
  }

  public Dataset visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public Dataset temporary(Boolean temporary) {
    this.temporary = temporary;
    return this;
  }

   /**
   * Get temporary
   * @return temporary
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getTemporary() {
    return temporary;
  }

  public void setTemporary(Boolean temporary) {
    this.temporary = temporary;
  }

  public Dataset featured(Boolean featured) {
    this.featured = featured;
    return this;
  }

   /**
   * Get featured
   * @return featured
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }

  public Dataset datasetURI(String datasetURI) {
    this.datasetURI = datasetURI;
    return this;
  }

   /**
   * Get datasetURI
   * @return datasetURI
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDatasetURI() {
    return datasetURI;
  }

  public void setDatasetURI(String datasetURI) {
    this.datasetURI = datasetURI;
  }

  public Dataset byModel(String byModel) {
    this.byModel = byModel;
    return this;
  }

   /**
   * Get byModel
   * @return byModel
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getByModel() {
    return byModel;
  }

  public void setByModel(String byModel) {
    this.byModel = byModel;
  }

  public Dataset dataEntry(List<DataEntry> dataEntry) {
    this.dataEntry = dataEntry;
    return this;
  }

  public Dataset addDataEntryItem(DataEntry dataEntryItem) {
    this.dataEntry.add(dataEntryItem);
    return this;
  }

   /**
   * Get dataEntry
   * @return dataEntry
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<DataEntry> getDataEntry() {
    return dataEntry;
  }

  public void setDataEntry(List<DataEntry> dataEntry) {
    this.dataEntry = dataEntry;
  }

  public Dataset features(List<FeatureInfo> features) {
    this.features = features;
    return this;
  }

  public Dataset addFeaturesItem(FeatureInfo featuresItem) {
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<FeatureInfo> getFeatures() {
    return features;
  }

  public void setFeatures(List<FeatureInfo> features) {
    this.features = features;
  }

  public Dataset totalRows(Integer totalRows) {
    this.totalRows = totalRows;
    return this;
  }

   /**
   * Get totalRows
   * @return totalRows
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTotalRows() {
    return totalRows;
  }

  public void setTotalRows(Integer totalRows) {
    this.totalRows = totalRows;
  }

  public Dataset totalColumns(Integer totalColumns) {
    this.totalColumns = totalColumns;
    return this;
  }

   /**
   * Get totalColumns
   * @return totalColumns
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTotalColumns() {
    return totalColumns;
  }

  public void setTotalColumns(Integer totalColumns) {
    this.totalColumns = totalColumns;
  }

  public Dataset descriptors(List<DescriptorsEnum> descriptors) {
    this.descriptors = descriptors;
    return this;
  }

  public Dataset addDescriptorsItem(DescriptorsEnum descriptorsItem) {
    this.descriptors.add(descriptorsItem);
    return this;
  }

   /**
   * Get descriptors
   * @return descriptors
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<DescriptorsEnum> getDescriptors() {
    return descriptors;
  }

  public void setDescriptors(List<DescriptorsEnum> descriptors) {
    this.descriptors = descriptors;
  }

  public Dataset id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dataset dataset = (Dataset) o;
    return Objects.equals(this.meta, dataset.meta) &&
        Objects.equals(this.ontologicalClasses, dataset.ontologicalClasses) &&
        Objects.equals(this.visible, dataset.visible) &&
        Objects.equals(this.temporary, dataset.temporary) &&
        Objects.equals(this.featured, dataset.featured) &&
        Objects.equals(this.datasetURI, dataset.datasetURI) &&
        Objects.equals(this.byModel, dataset.byModel) &&
        Objects.equals(this.dataEntry, dataset.dataEntry) &&
        Objects.equals(this.features, dataset.features) &&
        Objects.equals(this.totalRows, dataset.totalRows) &&
        Objects.equals(this.totalColumns, dataset.totalColumns) &&
        Objects.equals(this.descriptors, dataset.descriptors) &&
        Objects.equals(this.id, dataset.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, ontologicalClasses, visible, temporary, featured, datasetURI, byModel, dataEntry, features, totalRows, totalColumns, descriptors, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dataset {\n");
    
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    ontologicalClasses: ").append(toIndentedString(ontologicalClasses)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    temporary: ").append(toIndentedString(temporary)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    datasetURI: ").append(toIndentedString(datasetURI)).append("\n");
    sb.append("    byModel: ").append(toIndentedString(byModel)).append("\n");
    sb.append("    dataEntry: ").append(toIndentedString(dataEntry)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    totalRows: ").append(toIndentedString(totalRows)).append("\n");
    sb.append("    totalColumns: ").append(toIndentedString(totalColumns)).append("\n");
    sb.append("    descriptors: ").append(toIndentedString(descriptors)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

