/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * DatasetData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-09T12:17:06.729Z")
public class DatasetData {
  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("bundle")
  private String bundle = null;

  @SerializedName("descriptors")
  private List<String> descriptors = new ArrayList<String>();

  @SerializedName("intersectColumns")
  private Boolean intersectColumns = false;

  @SerializedName("retainNullValues")
  private Boolean retainNullValues = false;

  public DatasetData title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DatasetData description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DatasetData bundle(String bundle) {
    this.bundle = bundle;
    return this;
  }

   /**
   * Get bundle
   * @return bundle
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBundle() {
    return bundle;
  }

  public void setBundle(String bundle) {
    this.bundle = bundle;
  }

  public DatasetData descriptors(List<String> descriptors) {
    this.descriptors = descriptors;
    return this;
  }

  public DatasetData addDescriptorsItem(String descriptorsItem) {
    this.descriptors.add(descriptorsItem);
    return this;
  }

   /**
   * Get descriptors
   * @return descriptors
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getDescriptors() {
    return descriptors;
  }

  public void setDescriptors(List<String> descriptors) {
    this.descriptors = descriptors;
  }

  public DatasetData intersectColumns(Boolean intersectColumns) {
    this.intersectColumns = intersectColumns;
    return this;
  }

   /**
   * Get intersectColumns
   * @return intersectColumns
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIntersectColumns() {
    return intersectColumns;
  }

  public void setIntersectColumns(Boolean intersectColumns) {
    this.intersectColumns = intersectColumns;
  }

  public DatasetData retainNullValues(Boolean retainNullValues) {
    this.retainNullValues = retainNullValues;
    return this;
  }

   /**
   * Get retainNullValues
   * @return retainNullValues
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRetainNullValues() {
    return retainNullValues;
  }

  public void setRetainNullValues(Boolean retainNullValues) {
    this.retainNullValues = retainNullValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatasetData datasetData = (DatasetData) o;
    return Objects.equals(this.title, datasetData.title) &&
        Objects.equals(this.description, datasetData.description) &&
        Objects.equals(this.bundle, datasetData.bundle) &&
        Objects.equals(this.descriptors, datasetData.descriptors) &&
        Objects.equals(this.intersectColumns, datasetData.intersectColumns) &&
        Objects.equals(this.retainNullValues, datasetData.retainNullValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, bundle, descriptors, intersectColumns, retainNullValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatasetData {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    bundle: ").append(toIndentedString(bundle)).append("\n");
    sb.append("    descriptors: ").append(toIndentedString(descriptors)).append("\n");
    sb.append("    intersectColumns: ").append(toIndentedString(intersectColumns)).append("\n");
    sb.append("    retainNullValues: ").append(toIndentedString(retainNullValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

