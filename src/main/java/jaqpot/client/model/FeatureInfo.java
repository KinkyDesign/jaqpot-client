/*
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package jaqpot.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;

/**
 * FeatureInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-09T12:17:06.729Z")
public class FeatureInfo {
  @SerializedName("name")
  private String name = null;

  @SerializedName("units")
  private String units = null;

  @SerializedName("conditions")
  private Map<String, Object> conditions = new HashMap<String, Object>();

  /**
   * Gets or Sets category
   */
  public enum CategoryEnum {
    @SerializedName("EXPERIMENTAL")
    EXPERIMENTAL("EXPERIMENTAL"),
    
    @SerializedName("IMAGE")
    IMAGE("IMAGE"),
    
    @SerializedName("GO")
    GO("GO"),
    
    @SerializedName("MOPAC")
    MOPAC("MOPAC"),
    
    @SerializedName("CDK")
    CDK("CDK"),
    
    @SerializedName("PREDICTED")
    PREDICTED("PREDICTED");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("category")
  private CategoryEnum category = null;

  @SerializedName("uri")
  private String uri = null;

  public FeatureInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FeatureInfo units(String units) {
    this.units = units;
    return this;
  }

   /**
   * Get units
   * @return units
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUnits() {
    return units;
  }

  public void setUnits(String units) {
    this.units = units;
  }

  public FeatureInfo conditions(Map<String, Object> conditions) {
    this.conditions = conditions;
    return this;
  }

  public FeatureInfo putConditionsItem(String key, Object conditionsItem) {
    this.conditions.put(key, conditionsItem);
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Object> getConditions() {
    return conditions;
  }

  public void setConditions(Map<String, Object> conditions) {
    this.conditions = conditions;
  }

  public FeatureInfo category(CategoryEnum category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(example = "null", value = "")
  public CategoryEnum getCategory() {
    return category;
  }

  public void setCategory(CategoryEnum category) {
    this.category = category;
  }

  public FeatureInfo uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureInfo featureInfo = (FeatureInfo) o;
    return Objects.equals(this.name, featureInfo.name) &&
        Objects.equals(this.units, featureInfo.units) &&
        Objects.equals(this.conditions, featureInfo.conditions) &&
        Objects.equals(this.category, featureInfo.category) &&
        Objects.equals(this.uri, featureInfo.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, units, conditions, category, uri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureInfo {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

